# /bin/bash

DOWNLADS_DIR="./downloads"
SRC_DIR="./src"
URLS_FILE_PATH="./src/urls.txt"


function sd_usage {
cat <<EOF 
USAGE:
    $ $(basename ${0}) [OPTION_NAME]

OPTION_NAMES:

    -m or --multiple:       Download songs with multiple urls.
                            e.g.) $ sd -m

    -a or --artist:         Download all singles and albums of an artist with an artist page url.
                            e.g.) $ sd -a https://open.spotify.com/artist/7185Q95lPFld0aoPqO6e0U

    -h or --help:           Show usage


Enjoy :)


EOF
}

function check_dir(){
    if [ -e $1 ]
    then
        echo "[INFO]: ${1} folder exists."
    else
        echo "[INFO]: Create a new directory. (${1})"
        mkdir $1
    fi
}

function check_file(){
    if [ -e $1 ]
    then
        echo "[INFO]: ${1} folder exists."
    else
        echo "[INFO]: Create a new directory. (${1})"
        touch $1
    fi
}

function download_multiple_urls(){
    while read line   
    do
        spotify_dl -l $line -o ~/downloads
    done < $URLS_FILE_PATH
}


check_dir $DOWNLADS_DIR
check_dir $SRC_DIR
check_file $URLS_FILE_PATH

# Main logic
if [ "$1" = "-m" ] || [ "$1" = "--multiple" ]
then
    vi $URLS_FILE_PATH
    download_multiple_urls $URLS_FILE_PATH
elif [ "$1" = "-a" ] || [ "$1" = "--artist" ]
then
    python $HOME/bin/get_discography.py $2 > $HOME/src/urls.txt
    download_multiple_urls $URLS_FILE_PATH
elif [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
    sd_usage
else
    spotify_dl -l $1 -o ~/downloads
fi
